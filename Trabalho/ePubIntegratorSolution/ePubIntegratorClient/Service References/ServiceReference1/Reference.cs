//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ePubIntegratorClient.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IePubCloud")]
    public interface IePubCloud {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IePubCloud/GetUserStatistics", ReplyAction="http://tempuri.org/IePubCloud/GetUserStatisticsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        object[] GetUserStatistics(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IePubCloud/GetUserStatistics", ReplyAction="http://tempuri.org/IePubCloud/GetUserStatisticsResponse")]
        System.Threading.Tasks.Task<object[]> GetUserStatisticsAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IePubCloud/GetGlobalStatistics", ReplyAction="http://tempuri.org/IePubCloud/GetGlobalStatisticsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        object[] GetGlobalStatistics();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IePubCloud/GetGlobalStatistics", ReplyAction="http://tempuri.org/IePubCloud/GetGlobalStatisticsResponse")]
        System.Threading.Tasks.Task<object[]> GetGlobalStatisticsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IePubCloud/AddUserStatistics", ReplyAction="http://tempuri.org/IePubCloud/AddUserStatisticsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        void AddUserStatistics(int user, object[] statistics);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IePubCloud/AddUserStatistics", ReplyAction="http://tempuri.org/IePubCloud/AddUserStatisticsResponse")]
        System.Threading.Tasks.Task AddUserStatisticsAsync(int user, object[] statistics);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IePubCloud/RegistereBook", ReplyAction="http://tempuri.org/IePubCloud/RegistereBookResponse")]
        void RegistereBook(string title, string author, string language, string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IePubCloud/RegistereBook", ReplyAction="http://tempuri.org/IePubCloud/RegistereBookResponse")]
        System.Threading.Tasks.Task RegistereBookAsync(string title, string author, string language, string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IePubCloud/RegisterUser", ReplyAction="http://tempuri.org/IePubCloud/RegisterUserResponse")]
        bool RegisterUser(string username, string password, string email, string address, System.DateTime birthdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IePubCloud/RegisterUser", ReplyAction="http://tempuri.org/IePubCloud/RegisterUserResponse")]
        System.Threading.Tasks.Task<bool> RegisterUserAsync(string username, string password, string email, string address, System.DateTime birthdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IePubCloud/AddBookmark", ReplyAction="http://tempuri.org/IePubCloud/AddBookmarkResponse")]
        void AddBookmark(int ebookID, int chapterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IePubCloud/AddBookmark", ReplyAction="http://tempuri.org/IePubCloud/AddBookmarkResponse")]
        System.Threading.Tasks.Task AddBookmarkAsync(int ebookID, int chapterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IePubCloud/AddFavorite", ReplyAction="http://tempuri.org/IePubCloud/AddFavoriteResponse")]
        void AddFavorite(int ebookID, int chapterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IePubCloud/AddFavorite", ReplyAction="http://tempuri.org/IePubCloud/AddFavoriteResponse")]
        System.Threading.Tasks.Task AddFavoriteAsync(int ebookID, int chapterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IePubCloud/VerifyLogin", ReplyAction="http://tempuri.org/IePubCloud/VerifyLoginResponse")]
        bool VerifyLogin(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IePubCloud/VerifyLogin", ReplyAction="http://tempuri.org/IePubCloud/VerifyLoginResponse")]
        System.Threading.Tasks.Task<bool> VerifyLoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IePubCloud/isWebServiceUp", ReplyAction="http://tempuri.org/IePubCloud/isWebServiceUpResponse")]
        bool isWebServiceUp();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IePubCloud/isWebServiceUp", ReplyAction="http://tempuri.org/IePubCloud/isWebServiceUpResponse")]
        System.Threading.Tasks.Task<bool> isWebServiceUpAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IePubCloudChannel : ePubIntegratorClient.ServiceReference1.IePubCloud, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IePubCloudClient : System.ServiceModel.ClientBase<ePubIntegratorClient.ServiceReference1.IePubCloud>, ePubIntegratorClient.ServiceReference1.IePubCloud {
        
        public IePubCloudClient() {
        }
        
        public IePubCloudClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IePubCloudClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IePubCloudClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IePubCloudClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public object[] GetUserStatistics(string username) {
            return base.Channel.GetUserStatistics(username);
        }
        
        public System.Threading.Tasks.Task<object[]> GetUserStatisticsAsync(string username) {
            return base.Channel.GetUserStatisticsAsync(username);
        }
        
        public object[] GetGlobalStatistics() {
            return base.Channel.GetGlobalStatistics();
        }
        
        public System.Threading.Tasks.Task<object[]> GetGlobalStatisticsAsync() {
            return base.Channel.GetGlobalStatisticsAsync();
        }
        
        public void AddUserStatistics(int user, object[] statistics) {
            base.Channel.AddUserStatistics(user, statistics);
        }
        
        public System.Threading.Tasks.Task AddUserStatisticsAsync(int user, object[] statistics) {
            return base.Channel.AddUserStatisticsAsync(user, statistics);
        }
        
        public void RegistereBook(string title, string author, string language, string category) {
            base.Channel.RegistereBook(title, author, language, category);
        }
        
        public System.Threading.Tasks.Task RegistereBookAsync(string title, string author, string language, string category) {
            return base.Channel.RegistereBookAsync(title, author, language, category);
        }
        
        public bool RegisterUser(string username, string password, string email, string address, System.DateTime birthdate) {
            return base.Channel.RegisterUser(username, password, email, address, birthdate);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterUserAsync(string username, string password, string email, string address, System.DateTime birthdate) {
            return base.Channel.RegisterUserAsync(username, password, email, address, birthdate);
        }
        
        public void AddBookmark(int ebookID, int chapterID) {
            base.Channel.AddBookmark(ebookID, chapterID);
        }
        
        public System.Threading.Tasks.Task AddBookmarkAsync(int ebookID, int chapterID) {
            return base.Channel.AddBookmarkAsync(ebookID, chapterID);
        }
        
        public void AddFavorite(int ebookID, int chapterID) {
            base.Channel.AddFavorite(ebookID, chapterID);
        }
        
        public System.Threading.Tasks.Task AddFavoriteAsync(int ebookID, int chapterID) {
            return base.Channel.AddFavoriteAsync(ebookID, chapterID);
        }
        
        public bool VerifyLogin(string username, string password) {
            return base.Channel.VerifyLogin(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> VerifyLoginAsync(string username, string password) {
            return base.Channel.VerifyLoginAsync(username, password);
        }
        
        public bool isWebServiceUp() {
            return base.Channel.isWebServiceUp();
        }
        
        public System.Threading.Tasks.Task<bool> isWebServiceUpAsync() {
            return base.Channel.isWebServiceUpAsync();
        }
    }
}
